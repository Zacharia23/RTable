import type { NextPage } from 'next'
import Head from 'next/head'
import Table from '../Components/Table'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import _ from 'lodash'
import {MagnifyingGlassIcon} from "@heroicons/react/24/solid";
import moment from "moment/moment";
import React, {useState, useEffect, useCallback, Fragment, useMemo, useRef} from "react";

const Home: NextPage = () => {

  const [pageCount, setPageCount] = useState(0)
  const [data, setData] = useState([])
  const fetchIdRef = useRef(0)
  const [loading, setLoading] = useState(false)
  const [searchTerm, setSearchTerm] = useState("")

  const fetchData = useCallback(
      ({pageSize, pageIndex}: any) => {
        console.log(`fetchData is being called`)
        const fetchId = ++fetchIdRef.current
        setLoading(true)
        if(fetchId == fetchIdRef.current) {
          fetchAPIData({
            limit: pageSize,
            skip: pageSize * pageIndex,
            search: searchTerm
          })
        }
      },[searchTerm]
  )

  const _handleSearch = _.debounce((search: any) => {setSearchTerm(search)}, 1500, {leading: true, maxWait: 1500})

  const columns = useMemo(() => [
    {Header: "Price", accessor: "price", show: true},
    {Header: "Shares", accessor: "shares", show: true},
    {Header: "Ticker", accessor: "ticker", show: true},
    {Header: "Ticket", accessor: "ticket", show: true},
    {
      Header: "Time",
      accessor: "time",
      Cell: (cellInfo: any) => {
        return (
            <Fragment>
              {moment(cellInfo.row.original.time).format("Do MMM YYYY")}
            </Fragment>
        )
      }
    }
  ], [])
  const fetchAPIData = async ({ limit, skip, search }: any) => {
    try {
      setLoading(true)
      const response = await fetch(`http://localhost:8000/companies?limit=${limit}&skip=${skip}&search=${search}`)
      const data = await response.json()

      setData(data.data)
      setPageCount(data.paging.pages)
      setLoading(false)

    } catch (e) {
      console.log(`Error while fetching`, e)
    }
  }

  return (
    <div className="max-w-7xl antialiased">
      <Head>
        <title>perShare</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="p-10">
        <h1 className="text-3xl border-b border-gray-200 flex justify-center text-sky-500">
          Welcome to  perShare
        </h1>

        <div className="mt-3">
          <div>

            <div>
              <label className="block text-sm font-medium text-gray-700"> Search Tickets </label>
              <div className="mt-1 flex rounded-md shadow-sm">
                <div className="relative flex flex-grow items-stretch focus-within:z-10">
                  <div className="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">
                    <MagnifyingGlassIcon className="h-5 w-5 text-gray-400" aria-hidden="true" />
                  </div>
                  <input
                      id="searchTerm"
                      name="searchTerm"
                      type="text"
                      onChange={(e) => _handleSearch(e.target.value)}
                      placeholder="Search by ticket"
                      className="block w-full rounded-none rounded-l-md border border-gray-300 pl-10 focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                  />
                </div>
                <button
                    type="button"
                    className="relative -ml-px inline-flex items-center space-x-2 rounded-r-md border border-gray-300 bg-gray-50 px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-100 focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500"
                >
                  <span> Search </span>
                </button>
              </div>
            </div>

            <div className="mt-8 flex flex-col">
              <div className="-my-2 -mx-4 overflow-x-auto sm:-mx-6 lg:-mx-8">
                <div className="inline-block min-w-full py-2 align-middle md:px-6 lg:px-8">
                  <Table
                      pageCount={pageCount}
                      fetchData={fetchData}
                      columns={columns}
                      loading={loading}
                      data={data}
                  />
                </div>
              </div>

            </div>
          </div>
        </div>


      </main>

    </div>
  )
}

export default Home
